import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.Timer;
import java.util.TimerTask;

class QuizApplication {

    private static final int TIME_PER_QUESTION = 10; // Adjust time in seconds

    public static void main(String[] args) {
        List<Question> questions = prepareQuestions();
        int score = takeQuiz(questions);
        displayResults(score, questions);
    }

    private static List<Question> prepareQuestions() {
        List<Question> questions = new ArrayList<>();
        // Add your questions and options here
        // Example:
        questions.add(new Question(
                "What is the capital of France?",
                List.of("London", "Paris", "Berlin"),
                1
        ));
        return questions;
    }

    private static int takeQuiz(List<Question> questions) {
        int score = 0;
        Scanner scanner = new Scanner(System.in);

        for (Question question : questions) {
            System.out.println(question.getText());
            displayOptions(question.getOptions());
            int answer = getUserAnswer(scanner);
            if (question.isCorrectAnswer(answer)) {
                score++;
                System.out.println("Correct!");
            } else {
                System.out.println("Incorrect. The correct answer is " + question.getCorrectAnswerOption());
            }
            System.out.println();
        }

        return score;
    }

    private static void displayOptions(List<String> options) {
        for (int i = 0; i < options.size(); i++) {
            System.out.println((i + 1) + ". " + options.get(i));
        }
    }

    private static int getUserAnswer(Scanner scanner) {
        System.out.print("Enter your answer (number): ");

        Timer timer = new Timer();
        TimerTask task = new TimerTask() {
            @Override
            public void run() {
                System.out.println("Time's Up!");
                timer.cancel();
            }
        };

        timer.schedule(task, TIME_PER_QUESTION * 1000); // Schedule timer for specified time

        int answer;
        try {
            answer = scanner.nextInt();
        } finally {
            timer.cancel();
        }

        return answer;
    }

    private static void displayResults(int score, List<Question> questions) {
        System.out.println("Your score: " + score + "/" + questions.size());
        System.out.println("Review your answers:");

        for (int i = 0; i < questions.size(); i++) {
            Question question = questions.get(i);
            System.out.println("Question " + (i + 1) + ": " + question.getText());
            System.out.println("Your answer: " + question.getOptionByIndex(getUserAnswer(new Scanner(System.in)) - 1));
            System.out.println("Correct answer: " + question.getCorrectAnswerOption());
            System.out.println();
        }
    }
}

class Question {

    private final String text;
    private final List<String> options;
    private final int correctAnswerIndex;

    public Question(String text, List<String> options, int correctAnswerIndex) {
        this.text = text;
        this.options = options;
        this.correctAnswerIndex = correctAnswerIndex;
    }

    public String getText() {
        return text;
    }

    public List<String> getOptions() {
        return options;
    }

    public String getCorrectAnswerOption() {
        return options.get(correctAnswerIndex);
    }

    public int getCorrectAnswerIndex() {
        return correctAnswerIndex;
    }

    public boolean isCorrectAnswer(int answerIndex) {
        return answerIndex - 1 == correctAnswerIndex;
    }

    public String getOptionByIndex(int index) {
        return options.get(index);
    }
}
